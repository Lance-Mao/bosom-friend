<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fb.dao.DetailsDao">
    <!-- Details的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Details_Map" type="com.fb.entity.Details">
        <id column="id" property="id" />
        <result column="concept_of_love" property="conceptOfLove" />
        <result column="spouse_intention" property="spouseIntention" />
        <result column="hobby" property="hobby" />
        <result column="wage" property="wage" />
        <result column="photo" property="photo" />
        <result column="personality_traits" property="personalityTraits" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:bf_details的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="bf_details_Column">
        bf_details.id as id
        ,bf_details.concept_of_love as concept_of_love
        ,bf_details.spouse_intention as spouse_intention
        ,bf_details.hobby as hobby
        ,bf_details.wage as wage
        ,bf_details.photo as photo
        ,bf_details.personality_traits as personality_traits
    </sql>




    <!-- 获得一个Details对象,以参数Details对象中不为空的属性作为条件进行查询-->
    <select id="selectDetailsByObj" parameterType="com.fb.entity.Details" resultMap="result_Details_Map">
        select 
            <include refid="bf_details_Column" /> 
        from bf_details
        <where>
            <if test="personalityTraits != null "> and bf_details.personality_traits = #{personalityTraits}</if>
            <if test="photo != null "> and bf_details.photo = #{photo}</if>
            <if test="wage != null "> and bf_details.wage = #{wage}</if>
            <if test="hobby != null "> and bf_details.hobby = #{hobby}</if>
            <if test="spouseIntention != null "> and bf_details.spouse_intention = #{spouseIntention}</if>
            <if test="conceptOfLove != null "> and bf_details.concept_of_love = #{conceptOfLove}</if>
            <if test="id != null "> and bf_details.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Details的id获得对应数据库中表的数据对象-->
    <select id="selectDetailsById" parameterType="java.lang.Integer" resultMap="result_Details_Map">
        select 
            <include refid="bf_details_Column" /> 
        from bf_details
        where bf_details.id = #{id}
    </select> 

    <!-- 将Details插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertDetails" parameterType="com.fb.entity.Details">
        insert into bf_details(id,concept_of_love,spouse_intention,hobby,wage,photo,personality_traits) 
        values(#{id},#{conceptOfLove},#{spouseIntention},#{hobby},#{wage},#{photo},#{personalityTraits})
    </insert>

    <!-- 将Details中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyDetails" parameterType="com.fb.entity.Details">
        insert into bf_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="conceptOfLove != null">concept_of_love,</if>
            <if test="spouseIntention != null">spouse_intention,</if>
            <if test="hobby != null">hobby,</if>
            <if test="wage != null">wage,</if>
            <if test="photo != null">photo,</if>
            <if test="personalityTraits != null">personality_traits,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="conceptOfLove != null"> #{conceptOfLove},</if>
            <if test="spouseIntention != null"> #{spouseIntention},</if>
            <if test="hobby != null"> #{hobby},</if>
            <if test="wage != null"> #{wage},</if>
            <if test="photo != null"> #{photo},</if>
            <if test="personalityTraits != null"> #{personalityTraits},</if>
        </trim>
    </insert>

    <!-- 通过Details的id将数据库表中对应的数据删除-->
    <delete id="deleteDetailsById" parameterType="java.lang.Integer">
        delete from bf_details
        where id = #{id}
    </delete>



    <!-- 通过Details的id将Details的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateDetailsById" parameterType="com.fb.entity.Details">
        update bf_details set
            concept_of_love=#{conceptOfLove}
            ,spouse_intention=#{spouseIntention}
            ,hobby=#{hobby}
            ,wage=#{wage}
            ,photo=#{photo}
            ,personality_traits=#{personalityTraits}
        where id=#{id}
    </update>

    <!-- 通过Details的id将Details中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyDetailsById" parameterType="com.fb.entity.Details">
        update bf_details
        <set>
            <if test="conceptOfLove != null">
                concept_of_love=#{conceptOfLove},
            </if>
            <if test="spouseIntention != null">
                spouse_intention=#{spouseIntention},
            </if>
            <if test="hobby != null">
                hobby=#{hobby},
            </if>
            <if test="wage != null">
                wage=#{wage},
            </if>
            <if test="photo != null">
                photo=#{photo},
            </if>
            <if test="personalityTraits != null">
                personality_traits=#{personalityTraits},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Details中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateDetails" parameterType="map">
        update bf_details
        <set>
                id=#{enti.id},
                concept_of_love=#{enti.conceptOfLove},
                spouse_intention=#{enti.spouseIntention},
                hobby=#{enti.hobby},
                wage=#{enti.wage},
                photo=#{enti.photo},
                personality_traits=#{enti.personalityTraits},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Details中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyDetails" parameterType="map">
        update bf_details
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.conceptOfLove != null">
                concept_of_love=#{enti.conceptOfLove},
            </if>
            <if test="enti.spouseIntention != null">
                spouse_intention=#{enti.spouseIntention},
            </if>
            <if test="enti.hobby != null">
                hobby=#{enti.hobby},
            </if>
            <if test="enti.wage != null">
                wage=#{enti.wage},
            </if>
            <if test="enti.photo != null">
                photo=#{enti.photo},
            </if>
            <if test="enti.personalityTraits != null">
                personality_traits=#{enti.personalityTraits},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>