<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fb.dao.SuggestDao">
    <!-- Suggest的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Suggest_Map" type="com.fb.entity.Suggest">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="content" property="content" />
        <result column="date" property="date" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:bf_suggest的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="bf_suggest_Column">
        bf_suggest.id as id
        ,bf_suggest.user_id as user_id
        ,bf_suggest.content as content
        ,bf_suggest.date as date
    </sql>


    <!-- 获得一个Suggest对象,以参数Suggest对象中不为空的属性作为条件进行查询-->
    <select id="selectSuggestByObj" parameterType="com.fb.entity.Suggest" resultMap="result_Suggest_Map">
        select 
            <include refid="bf_suggest_Column" /> 
        from bf_suggest
        <where>
            <if test="date != null "> and bf_suggest.date = #{date}</if>
            <if test="content != null "> and bf_suggest.content = #{content}</if>
            <if test="userId != null "> and bf_suggest.user_id = #{userId}</if>
            <if test="id != null "> and bf_suggest.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Suggest的id获得对应数据库中表的数据对象-->
    <select id="selectSuggestById" parameterType="java.lang.Integer" resultMap="result_Suggest_Map">
        select 
            <include refid="bf_suggest_Column" /> 
        from bf_suggest
        where bf_suggest.id = #{id}
    </select> 

    <!-- 将Suggest插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertSuggest" parameterType="com.fb.entity.Suggest">
        insert into bf_suggest(id,user_id,content,date) 
        values(#{id},#{userId},#{content},#{date})
    </insert>

    <!-- 将Suggest中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptySuggest" parameterType="com.fb.entity.Suggest">
        insert into bf_suggest
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userId != null">user_id,</if>
            <if test="content != null">content,</if>
            <if test="date != null">date,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="userId != null"> #{userId},</if>
            <if test="content != null"> #{content},</if>
            <if test="date != null"> #{date},</if>
        </trim>
    </insert>

    <!-- 通过Suggest的id将数据库表中对应的数据删除-->
    <delete id="deleteSuggestById" parameterType="java.lang.Integer">
        delete from bf_suggest
        where id = #{id}
    </delete>



    <!-- 通过Suggest的id将Suggest的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateSuggestById" parameterType="com.fb.entity.Suggest">
        update bf_suggest set
            user_id=#{userId}
            ,content=#{content}
            ,date=#{date}
        where id=#{id}
    </update>

    <!-- 通过Suggest的id将Suggest中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySuggestById" parameterType="com.fb.entity.Suggest">
        update bf_suggest
        <set>
            <if test="userId != null">
                user_id=#{userId},
            </if>
            <if test="content != null">
                content=#{content},
            </if>
            <if test="date != null">
                date=#{date},
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 通过辅助工具Assist中的条件将Suggest中的数据更新到数据库对应的表中,包括值为null的数据-->
    <update id="updateSuggest" parameterType="map">
        update bf_suggest
        <set>
                id=#{enti.id},
                user_id=#{enti.userId},
                content=#{enti.content},
                date=#{enti.date},
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

    <!-- 通过辅助工具Assist中的条件将Suggest中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptySuggest" parameterType="map">
        update bf_suggest
        <set>
            <if test="enti.id != null">
                id=#{enti.id},
            </if>
            <if test="enti.userId != null">
                user_id=#{enti.userId},
            </if>
            <if test="enti.content != null">
                content=#{enti.content},
            </if>
            <if test="enti.date != null">
                date=#{enti.date},
            </if>
        </set>
        <if test="assist.require!=null"><include refid="updateAssist" /></if>
    </update>

</mapper>